// –ú–æ–¥—É–ª—å –æ—Å–Ω–æ–≤–Ω–æ–π –∏–≥—Ä–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ v.3.11.8
window.BotGameLogic = {
    vtAbortController: null,
    chtAbortController: null,
    
    // Google Sheets –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
    SPREADSHEET_ID: '1Ygi2GzE6MB0_9im_npM6N1Im-jHiXVbpIQ_V4CkxeaQ',
    GUILD_SPREADSHEET_ID: '1N2SdlN86wDzEsuzQ7Hlnv-91IAXhNmNMeRuSVtwD-zQ',

    /**
     * –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
     */
    async runScript() {
        try {
            window.BotConfig.selectedClass = window.BotUtils.detectPlayerClass();
            await window.BotUtils.clickByTextContent('–°—Ä–∞–∂–µ–Ω–∏—è');
            await window.BotUtils.delay(100);
            await window.BotUtils.clickByLocationName(window.BotConfig.selectedLocation);
            await window.BotUtils.delay(100);
            
            while (window.BotConfig.isScriptRunning) {
                await this.mainLoop();
                await window.BotUtils.delay(100);
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –≤ —Å–∫—Ä–∏–ø—Ç–µ:', error);
        }
    },

    /**
     * –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –∏–≥—Ä—ã
     */
    async mainLoop() {
        await window.BotNavigation.checkAndReturnToCity();
        window.BotConfig.selectedClass = window.BotUtils.detectPlayerClass();
        await window.BotNavigation.checkBattleMembersAndClickMap();
        await window.BotUtils.delay(100);

        await window.BotInventory.handleFullBackpack();
        await window.BotUtils.delay(100);

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º VIP/–ù–µ VIP
        window.BotConfig.vipStatus = window.BotUtils.autoDetectVipStatus();

        // 1. –í—Å–µ–≥–¥–∞ –∏—â–µ–º –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–µ–∫—Å–∞–≥–æ–Ω –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É
        const hexagonResult = await window.BotNavigation.clickHexagonWithPriority(window.BotNavigation.getPriorities());
        if (!hexagonResult.found) return;

        const transitionSuccess = await window.BotUtils.clickByTextContent('–ü–µ—Ä–µ–π—Ç–∏');
        await window.BotUtils.delay(100);

        if (!transitionSuccess) {
            const currentHexText = document.querySelector('div.hex-footer div.hex-current-text.ng-star-inserted');
            if (currentHexText && currentHexText.textContent.trim() === '–í—ã –∑–¥–µ—Å—å') {
                const closeButton = document.querySelector('tui-icon.svg-icon[style*="close.svg"]');
                if (closeButton) {
                    closeButton.click();
                    await window.BotUtils.delay(100);
                    
                    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º VIP —Å—Ç–∞—Ç—É—Å –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
                    window.BotConfig.vipStatus = window.BotUtils.autoDetectVipStatus();
                    
                    if (window.BotConfig.vipStatus === 'VIP') {
                        // –î–ª—è VIP –∏–≥—Ä–æ–∫–æ–≤ –≤–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–ø–æ–∏—Å–∫
                        const autoSwitchIcon = document.querySelector('tui-icon.svg-icon[style*="switch-auto.svg"]');
                        if (autoSwitchIcon) {
                            autoSwitchIcon.click();
                            await window.BotUtils.delay(100);
                        } else {
                            console.error('–ò–∫–æ–Ω–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–∂–∏–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                            return;
                        }
                    }
                    // –î–ª—è –Ω–µ-VIP –∏–≥—Ä–æ–∫–æ–≤ –Ω–µ –¥–µ–ª–∞–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∑–¥–µ—Å—å - –æ–Ω–æ –±—É–¥–µ—Ç –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ –±–æ—è
                    
                    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –±–æ—è –∏ –≤—ã–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é
                    const isChampion = hexagonResult.type === 'champion';
                    await window.BotCombat.fightEnemies(isChampion);
                } else {
                    console.error('–ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                    return;
                }
                return;
            }
            return;
        }

        await window.BotUtils.delay(100);

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º VIP/–ù–µ VIP –ø–µ—Ä–µ–¥ –±–æ–µ–º
        window.BotConfig.vipStatus = window.BotUtils.autoDetectVipStatus();

        // 2. –ü–æ—Å–ª–µ –ø–µ—Ä–µ—Ö–æ–¥–∞: –ª–æ–≥–∏–∫–∞ –¥–ª—è VIP –∏ –Ω–µ-VIP
        if (window.BotConfig.vipStatus === 'VIP') {
            const enemyAppeared = await window.BotCombat.waitForEnemy();
            await window.BotUtils.delay(100);
            if (!enemyAppeared) return;
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –±–æ—è –∏ –≤—ã–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é
            const isChampion = hexagonResult.type === 'champion';
            await window.BotCombat.fightEnemies(isChampion);
            await window.BotUtils.delay(100);
        } else {
            // –î–ª—è –ù–ï –í–ò–ü: –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∫–Ω–æ–ø–∫–∞ switch
            console.log('üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω –ù–ï –í–ò–ü –∏–≥—Ä–æ–∫');
            const switchIcon = document.querySelector('tui-icon.svg-icon[style*="assets/icons/switch.svg"]');
            if (switchIcon) {
                // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –≤—Ä–∞–≥–æ–≤ (–∫–æ–≥–¥–∞ battle-bar-enemies-value —Å—Ç–∞–Ω–µ—Ç –±–æ–ª—å—à–µ 0)
                await window.BotUtils.waitFor(() => {
                    const enemiesValueElement = document.querySelector('div.battle-bar-enemies-value');
                    if (enemiesValueElement) {
                        const enemiesCount = parseInt(enemiesValueElement.textContent.trim(), 10) || 0;
                        return enemiesCount > 0;
                    }
                    return false;
                }, 200, 10000);
                
                // –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ switch –ø–æ—Å–ª–µ –ø–æ—è–≤–ª–µ–Ω–∏—è –≤—Ä–∞–≥–æ–≤
                console.log('üîÑ –í—Ä–∞–≥–∏ –ø–æ—è–≤–∏–ª–∏—Å—å, –Ω–∞–∂–∏–º–∞—é –Ω–∞ switch...');
                switchIcon.click();
                await window.BotUtils.delay(100);
                console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ —Å–º–µ–Ω—ã —Ü–µ–ª–∏ –Ω–∞–∂–∞—Ç–∞ –¥–ª—è –Ω–µ-VIP –∏–≥—Ä–æ–∫–∞');
            } else {
                console.log('üîÑ –ù–µ-VIP –∏–≥—Ä–æ–∫: –∫–Ω–æ–ø–∫–∞ switch –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∂–¥–µ–º –≤—Ä–∞–≥–æ–≤ –æ–±—ã—á–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º');
                const enemyAppeared = await window.BotCombat.waitForEnemy();
                await window.BotUtils.delay(100);
                if (!enemyAppeared) return;
            }
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –±–æ—è –∏ –≤—ã–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é
            const isChampion = hexagonResult.type === 'champion';
            await window.BotCombat.fightEnemies(isChampion);
            await window.BotUtils.delay(100);
        }
    },

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –±–æ—Å—Å–æ–≤ —Å –≤—ã–ø–∞–¥–∞—é—â–∏–º –º–µ–Ω—é
     */
    async createBossButtons() {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫–Ω–æ–ø–∫–∏, –µ—Å–ª–∏ –µ—Å—Ç—å
        const oldBossVTBtn = document.getElementById('boss-vt-button');
        const oldBossCHTBtn = document.getElementById('boss-cht-button');
        const oldBossDropdownBtn = document.getElementById('boss-dropdown-button');
        if (oldBossVTBtn) oldBossVTBtn.remove();
        if (oldBossCHTBtn) oldBossCHTBtn.remove();
        if (oldBossDropdownBtn) oldBossDropdownBtn.remove();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ –ª–∏ —É–∂–µ –Ω–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞
        if (document.getElementById('boss-dropdown-button')) return;

        // –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –ê–ö–¢–ò–í–ù–û–°–¢–ò
        const bossDropdownBtn = document.createElement('button');
        bossDropdownBtn.id = 'boss-dropdown-button';
        bossDropdownBtn.className = 'control-button-boss-dropdown';
        Object.assign(bossDropdownBtn.style, {
            width: '80px',
            height: '33px',
            background: 'radial-gradient(circle, rgba(40,25,15,0.95) 0%, rgba(20,12,8,0.98) 100%)',
            color: '#FFD700',
            border: '1px solid rgba(128,128,128,0.3)',
            borderRadius: '4px',
            cursor: 'pointer',
            fontSize: '10px',
            fontWeight: 'bold',
            display: 'flex',
            flexDirection: 'column',
            alignItems: 'center',
            justifyContent: 'center',
            boxShadow: '0 2px 4px rgba(0,0,0,0.3)',
            transition: 'all 0.2s ease',
            letterSpacing: '0.5px',
            fontFamily: 'Segoe UI, Arial, sans-serif',
            userSelect: 'none',
            outline: 'none',
            margin: '0',
            position: 'fixed', // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É
            zIndex: '1001',
            overflow: 'hidden'
        });

        // –°–æ–∑–¥–∞–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –≥—Ä–∞–¥–∏–µ–Ω—Ç
        const innerGlow = document.createElement('div');
        Object.assign(innerGlow.style, {
            position: 'absolute',
            top: '1px',
            left: '1px',
            right: '1px',
            bottom: '1px',
            borderRadius: '3px',
            background: 'radial-gradient(circle at 30% 30%, rgba(255, 140, 0, 0.1) 0%, transparent 70%)',
            pointerEvents: 'none'
        });
        bossDropdownBtn.appendChild(innerGlow);

        // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        const content = document.createElement('div');
        Object.assign(content.style, {
            position: 'relative',
            zIndex: '2',
            display: 'flex',
            flexDirection: 'column',
            alignItems: 'center',
            justifyContent: 'center'
        });

        const iconSpan = document.createElement('span');
        iconSpan.textContent = '–ê–ö–¢–ò–í–ù–û–°–¢–ò';
        iconSpan.style.fontSize = '10px';
        iconSpan.style.lineHeight = '1';

        content.appendChild(iconSpan);
        bossDropdownBtn.appendChild(content);

        // –°–æ–±—ã—Ç–∏—è –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
        bossDropdownBtn.addEventListener('mouseenter', () => {
            if (!this.activeBossType) {
                bossDropdownBtn.style.transform = 'translateY(-1px)';
                bossDropdownBtn.style.boxShadow = '0 4px 8px rgba(0,0,0,0.4)';
            }
        });
        
        bossDropdownBtn.addEventListener('mouseleave', () => {
            if (!this.activeBossType) {
                bossDropdownBtn.style.transform = 'translateY(0)';
                bossDropdownBtn.style.boxShadow = '0 2px 4px rgba(0,0,0,0.3)';
            }
        });

        // --- –í—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é ---
        const dropdown = document.createElement('div');
        dropdown.id = 'boss-dropdown-menu';
        Object.assign(dropdown.style, {
            position: 'fixed', // –ò–∑–º–µ–Ω—è–µ–º –Ω–∞ fixed
            left: '0', // –ë—É–¥–µ—Ç –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
            top: '0', // –ë—É–¥–µ—Ç –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
            width: '80px',
            background: '#2c2c2c',
            border: '1px solid rgba(128,128,128,0.3)',
            borderRadius: '4px',
            boxShadow: '0 4px 8px rgba(0,0,0,0.3)',
            zIndex: '1002',
            display: 'none',
            flexDirection: 'column',
            overflow: 'hidden'
        });

        // –ö–Ω–æ–ø–∫–∞ –ë–û–°–° –í–¢
        const vtOption = document.createElement('div');
        Object.assign(vtOption.style, {
            padding: '8px',
            fontSize: '10px',
            color: '#FFD700',
            background: 'rgba(40,15,15,0.95)',
            cursor: 'pointer',
            textAlign: 'center',
            borderBottom: '1px solid rgba(128,128,128,0.2)',
            transition: 'background 0.2s ease'
        });
        vtOption.textContent = '–ë–û–°–° –í–¢';
        vtOption.addEventListener('mouseenter', () => {
            vtOption.style.background = 'rgba(60,25,25,0.95)';
        });
        vtOption.addEventListener('mouseleave', () => {
            vtOption.style.background = 'rgba(40,15,15,0.95)';
        });

        // –ö–Ω–æ–ø–∫–∞ –ë–û–°–° –ß–¢
        const chtOption = document.createElement('div');
        Object.assign(chtOption.style, {
            padding: '8px',
            fontSize: '10px',
            color: '#FFD700',
            background: 'rgba(25,15,40,0.95)',
            cursor: 'pointer',
            textAlign: 'center',
            borderBottom: '1px solid rgba(128,128,128,0.2)',
            transition: 'background 0.2s ease'
        });
        chtOption.textContent = '–ë–û–°–° –ß–¢';
        chtOption.addEventListener('mouseenter', () => {
            chtOption.style.background = 'rgba(45,25,60,0.95)';
        });
        chtOption.addEventListener('mouseleave', () => {
            chtOption.style.background = 'rgba(25,15,40,0.95)';
        });

        // –ö–Ω–æ–ø–∫–∞ –í–µ—â–∏ –ì (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö)
        const guildItemsOption = document.createElement('div');
        Object.assign(guildItemsOption.style, {
            padding: '8px',
            fontSize: '10px',
            color: '#FFD700',
            background: 'rgba(15,40,25,0.95)',
            cursor: 'pointer',
            textAlign: 'center',
            borderBottom: '1px solid rgba(128,128,128,0.2)',
            transition: 'background 0.2s ease',
            display: window.BotUI && window.BotUI.isAuthorized ? 'block' : 'none'
        });
        guildItemsOption.textContent = '–í–µ—â–∏ –ì';
        guildItemsOption.addEventListener('mouseenter', () => {
            guildItemsOption.style.background = 'rgba(25,60,45,0.95)';
        });
        guildItemsOption.addEventListener('mouseleave', () => {
            guildItemsOption.style.background = 'rgba(15,40,25,0.95)';
        });

        // –ö–Ω–æ–ø–∫–∞ –í–µ—â–∏ –¢–û–ü (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö)
        const topItemsOption = document.createElement('div');
        Object.assign(topItemsOption.style, {
            padding: '8px',
            fontSize: '10px',
            color: '#FFD700',
            background: 'rgba(40,40,15,0.95)',
            cursor: 'pointer',
            textAlign: 'center',
            transition: 'background 0.2s ease',
            display: window.BotUI && window.BotUI.isAuthorized ? 'block' : 'none'
        });
        topItemsOption.textContent = '–í–µ—â–∏ –¢–û–ü';
        topItemsOption.addEventListener('mouseenter', () => {
            topItemsOption.style.background = 'rgba(60,60,25,0.95)';
        });
        topItemsOption.addEventListener('mouseleave', () => {
            topItemsOption.style.background = 'rgba(40,40,15,0.95)';
        });

        dropdown.appendChild(vtOption);
        dropdown.appendChild(chtOption);
        dropdown.appendChild(guildItemsOption);
        dropdown.appendChild(topItemsOption);

        // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        this.activeBossType = null; // 'vt' –∏–ª–∏ 'cht'
        this.vtAbortController = null;
        this.chtAbortController = null;

        // –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞/—Å–∫—Ä—ã—Ç–∏—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é
        const toggleDropdown = () => {
            const isVisible = dropdown.style.display === 'flex';
            if (isVisible) {
                dropdown.style.display = 'none';
            } else {
                // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –º–µ–Ω—é –ø–æ–¥ –∫–Ω–æ–ø–∫–æ–π
                const buttonRect = bossDropdownBtn.getBoundingClientRect();
                dropdown.style.left = buttonRect.left + 'px';
                dropdown.style.top = (buttonRect.bottom + 2) + 'px';
                dropdown.style.display = 'flex';
            }
        };

        // –§—É–Ω–∫—Ü–∏—è —Å–±—Ä–æ—Å–∞ –∫–Ω–æ–ø–∫–∏ –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
        const resetButton = () => {
            iconSpan.textContent = '–ê–ö–¢–ò–í–ù–û–°–¢–ò';
            bossDropdownBtn.style.background = 'radial-gradient(circle, rgba(40,25,15,0.95) 0%, rgba(20,12,8,0.98) 100%)';
            bossDropdownBtn.style.boxShadow = '0 2px 4px rgba(0,0,0,0.3)';
            this.activeBossType = null;
        };

        // –§—É–Ω–∫—Ü–∏—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –±–æ—Å—Å–∞ –í–¢
        const activateVT = async () => {
            if (window.BotUI && window.BotUI.deactivateAllButtons) {
                window.BotUI.deactivateAllButtons();
            }
            
            this.activeBossType = 'vt';
            this.vtAbortController = new AbortController();
            iconSpan.textContent = '–°–¢–û–ü –í–¢';
            dropdown.style.display = 'none';
            
            bossDropdownBtn.style.background = 'radial-gradient(circle, rgba(60,25,25,0.95) 0%, rgba(30,12,12,0.98) 100%)';
            bossDropdownBtn.style.boxShadow = '0 2px 8px rgba(255, 69, 0, 0.5)';
            
            try {
                await this.bossFarmLoopVT(this.vtAbortController.signal);
            } catch (error) {
                if (error.message.includes('aborted')) {
                    console.log('–§–∞—Ä–º –±–æ—Å—Å–∞ –í–¢ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
                } else {
                    console.error('–û—à–∏–±–∫–∞ —Ñ–∞—Ä–º–∞ –±–æ—Å—Å–∞ –í–¢:', error);
                }
            } finally {
                this.vtAbortController = null;
                resetButton();
            }
        };

        // –§—É–Ω–∫—Ü–∏—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –±–æ—Å—Å–∞ –ß–¢
        const activateCHT = async () => {
            if (window.BotUI && window.BotUI.deactivateAllButtons) {
                window.BotUI.deactivateAllButtons();
            }
            
            this.activeBossType = 'cht';
            this.chtAbortController = new AbortController();
            iconSpan.textContent = '–°–¢–û–ü –ß–¢';
            dropdown.style.display = 'none';
            
            bossDropdownBtn.style.background = 'radial-gradient(circle, rgba(45,25,60,0.95) 0%, rgba(25,15,40,0.98) 100%)';
            bossDropdownBtn.style.boxShadow = '0 2px 8px rgba(138, 43, 226, 0.5)';
            
            try {
                await this.bossFarmLoopCHT(this.chtAbortController.signal);
            } catch (error) {
                if (error.message.includes('aborted')) {
                    console.log('–§–∞—Ä–º –±–æ—Å—Å–∞ –ß–¢ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
                } else {
                    console.error('–û—à–∏–±–∫–∞ —Ñ–∞—Ä–º–∞ –±–æ—Å—Å–∞ –ß–¢:', error);
                }
            } finally {
                this.chtAbortController = null;
                resetButton();
            }
        };

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        bossDropdownBtn.addEventListener('click', (e) => {
            e.stopPropagation();
            
            if (this.activeBossType === 'vt') {
                // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –í–¢
                this.vtAbortController.abort();
                this.vtAbortController = null;
                resetButton();
                toggleDropdown();
            } else if (this.activeBossType === 'cht') {
                // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ß–¢
                this.chtAbortController.abort();
                this.chtAbortController = null;
                resetButton();
                toggleDropdown();
            } else {
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
                toggleDropdown();
            }
        });

        vtOption.addEventListener('click', (e) => {
            e.stopPropagation();
            activateVT();
        });

        chtOption.addEventListener('click', (e) => {
            e.stopPropagation();
            activateCHT();
        });

        guildItemsOption.addEventListener('click', async (e) => {
            e.stopPropagation();
            const shouldStart = await window.BotSecurity.showItemsWarningModal();
            if (shouldStart) {
                this.analyzeArsenal(this.GUILD_SPREADSHEET_ID);
            }
            dropdown.style.display = 'none';
        });

        topItemsOption.addEventListener('click', async (e) => {
            e.stopPropagation();
            const shouldStart = await window.BotSecurity.showItemsWarningModal();
            if (shouldStart) {
                this.analyzeArsenal(this.SPREADSHEET_ID);
            }
            dropdown.style.display = 'none';
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
        document.addEventListener('click', (e) => {
            if (!bossDropdownBtn.contains(e.target) && !dropdown.contains(e.target)) {
                dropdown.style.display = 'none';
            }
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é –≤ body
        document.body.appendChild(dropdown);

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ body (–ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É)
        document.body.appendChild(bossDropdownBtn);

        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∫–Ω–æ–ø–æ–∫ –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        this.updateBossButtonsVisibility = () => {
            if (window.BotUI && window.BotUI.isAuthorized) {
                guildItemsOption.style.display = 'block';
                topItemsOption.style.display = 'block';
            } else {
                guildItemsOption.style.display = 'none';
                topItemsOption.style.display = 'none';
            }
        };
    },

    /**
     * –§–∞—Ä–º –±–æ—Å—Å–∞ –í–¢
     */
    async bossFarmLoopVT(abortSignal) {
        console.log('üî• –ó–∞–ø—É—Å–∫ —Ñ–∞—Ä–º–∞ –±–æ—Å—Å–∞ –í–¢...');
        
        while (true) {
            if (abortSignal && abortSignal.aborted) throw new Error('bossFarmLoopVT aborted');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É "–í –≥–æ—Ä–æ–¥" –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º
            await window.BotNavigation.checkAndReturnToCity();
            
            try {
                // 1. –ö–ª–∏–∫ –Ω–∞ "–°—Ä–∞–∂–µ–Ω–∏—è" - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ —Ñ—É–Ω–∫—Ü–∏—é —á—Ç–æ –∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ
                console.log('1Ô∏è‚É£ –ö–ª–∏–∫ –Ω–∞ "–°—Ä–∞–∂–µ–Ω–∏—è"...');
                const battlesSuccess = await window.BotUtils.clickByTextContent('–°—Ä–∞–∂–µ–Ω–∏—è', 5000);
                if (battlesSuccess) {
                    console.log('‚úÖ –ö–ª–∏–∫ –ø–æ "–°—Ä–∞–∂–µ–Ω–∏—è" –≤—ã–ø–æ–ª–Ω–µ–Ω');
                    await window.BotUtils.delay(100);
                } else {
                    throw new Error('–ö–Ω–æ–ø–∫–∞ "–°—Ä–∞–∂–µ–Ω–∏—è" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                }

                // 2. –ö–ª–∏–∫ –Ω–∞ "–ó–µ–ª–µ–Ω—ã–µ —Ç–æ–ø–∏" - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ —Ñ—É–Ω–∫—Ü–∏—é —á—Ç–æ –∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ
                console.log('2Ô∏è‚É£ –ö–ª–∏–∫ –Ω–∞ "–ó–µ–ª–µ–Ω—ã–µ —Ç–æ–ø–∏"...');
                const swampsSuccess = await window.BotUtils.clickByLocationName('–ó–µ–ª–µ–Ω—ã–µ —Ç–æ–ø–∏', 5000);
                if (swampsSuccess) {
                    console.log('‚úÖ –ö–ª–∏–∫ –ø–æ "–ó–µ–ª–µ–Ω—ã–µ —Ç–æ–ø–∏" –≤—ã–ø–æ–ª–Ω–µ–Ω');
                    await window.BotUtils.delay(100);
                } else {
                    throw new Error('–õ–æ–∫–∞—Ü–∏—è "–ó–µ–ª–µ–Ω—ã–µ —Ç–æ–ø–∏" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                }

                // 3. –ö–ª–∏–∫ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≥–µ–∫—Å–∞–≥–æ–Ω
                console.log('3Ô∏è‚É£ –ö–ª–∏–∫ –Ω–∞ —Ü–µ–ª–µ–≤–æ–π –≥–µ–∫—Å–∞–≥–æ–Ω...');
                
                // –ò—â–µ–º –ø–æ–ª–∏–≥–æ–Ω –ø–æ —Ç–æ—á–Ω—ã–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
                const polygon = document.querySelector('polygon.hexagon[points="-1.5,8.25 16.5,-2.25 16.5,-23.25 -1.5,-33.75 -19.5,-23.25 -19.5,-2.25 -1.5,8.25"]');
                
                if (polygon) {
                    console.log('‚úÖ –ü–æ–ª–∏–≥–æ–Ω –Ω–∞–π–¥–µ–Ω, –≤—ã–ø–æ–ª–Ω—è—é –∫–ª–∏–∫...');
                    
                    // SVG —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –∏–º–µ—é—Ç –º–µ—Ç–æ–¥–∞ .click(), –∏—Å–ø–æ–ª—å–∑—É–µ–º dispatchEvent
                    const rect = polygon.getBoundingClientRect();
                    const clickEvent = new MouseEvent('click', {
                        bubbles: true,
                        cancelable: true,
                        view: window,
                        clientX: rect.left + rect.width / 2,
                        clientY: rect.top + rect.height / 2
                    });
                    
                    polygon.dispatchEvent(clickEvent);
                    console.log('üñ±Ô∏è –ö–ª–∏–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω —á–µ—Ä–µ–∑ MouseEvent');
                    await window.BotUtils.delay(100);
                } else {
                    throw new Error('–ü–æ–ª–∏–≥–æ–Ω —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω');
                }

                // 4. –ö–ª–∏–∫ –Ω–∞ "–ü–µ—Ä–µ–π—Ç–∏" - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ —Ñ—É–Ω–∫—Ü–∏—é —á—Ç–æ –∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ
                console.log('4Ô∏è‚É£ –ö–ª–∏–∫ –Ω–∞ "–ü–µ—Ä–µ–π—Ç–∏"...');
                const goSuccess = await window.BotUtils.clickByTextContent('–ü–µ—Ä–µ–π—Ç–∏', 5000);
                if (goSuccess) {
                    console.log('‚úÖ –ö–ª–∏–∫ –ø–æ "–ü–µ—Ä–µ–π—Ç–∏" –≤—ã–ø–æ–ª–Ω–µ–Ω');
                    await window.BotUtils.delay(100);
                } else {
                    throw new Error('–ö–Ω–æ–ø–∫–∞ "–ü–µ—Ä–µ–π—Ç–∏" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                }

                // 5. –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–ª–∏–∫–æ–≤ –ø–æ –ø–æ–ª–∏–≥–æ–Ω–∞–º —á–µ—Ä–µ–∑ 4.5 —Å–µ–∫—É–Ω–¥ –∫–∞–∂–¥—ã–π
                console.log('5Ô∏è‚É£ –ù–∞—á–∏–Ω–∞—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–ª–∏–∫–æ–≤ –ø–æ –ø–æ–ª–∏–≥–æ–Ω–∞–º...');
                
                // –ü–µ—Ä–≤—ã–π –ø–æ–ª–∏–≥–æ–Ω —á–µ—Ä–µ–∑ 4.5 —Å–µ–∫—É–Ω–¥—ã
                await window.BotUtils.delay(4500);
                console.log('üéØ –ö–ª–∏–∫ –ø–æ –ø–µ—Ä–≤–æ–º—É –ø–æ–ª–∏–≥–æ–Ω—É –º–∞—Ä—à—Ä—É—Ç–∞...');
                const polygon1 = document.querySelector('polygon.hexagon[points="18,-25.5 36,-36 36,-57 18,-67.5 0,-57 0,-36 18,-25.5"]');
                if (polygon1) {
                    console.log('‚úÖ –ü–æ–ª–∏–≥–æ–Ω 1 –Ω–∞–π–¥–µ–Ω, –≤—ã–ø–æ–ª–Ω—è—é –∫–ª–∏–∫...');
                    const rect1 = polygon1.getBoundingClientRect();
                    const clickEvent1 = new MouseEvent('click', {
                        bubbles: true,
                        cancelable: true,
                        view: window,
                        clientX: rect1.left + rect1.width / 2,
                        clientY: rect1.top + rect1.height / 2
                    });
                    polygon1.dispatchEvent(clickEvent1);
                    console.log('üñ±Ô∏è –ö–ª–∏–∫ –ø–æ –ø–æ–ª–∏–≥–æ–Ω—É 1 –≤—ã–ø–æ–ª–Ω–µ–Ω —á–µ—Ä–µ–∑ MouseEvent');
                    await window.BotUtils.delay(100);
                    
                    // –ö–ª–∏–∫ "–ü–µ—Ä–µ–π—Ç–∏" –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª–∏–≥–æ–Ω–∞
                    const go1Success = await window.BotUtils.clickByTextContent('–ü–µ—Ä–µ–π—Ç–∏', 5000);
                    if (go1Success) {
                        console.log('‚úÖ –ö–ª–∏–∫ –ø–æ "–ü–µ—Ä–µ–π—Ç–∏" –ø–æ—Å–ª–µ –ø–æ–ª–∏–≥–æ–Ω–∞ 1 –≤—ã–ø–æ–ª–Ω–µ–Ω');
                        await window.BotUtils.delay(100);
                    }
                } else {
                    console.log('‚ùå –ü–æ–ª–∏–≥–æ–Ω 1 –Ω–µ –Ω–∞–π–¥–µ–Ω');
                }

                // –í—Ç–æ—Ä–æ–π –ø–æ–ª–∏–≥–æ–Ω —á–µ—Ä–µ–∑ 4.5 —Å–µ–∫—É–Ω–¥—ã
                await window.BotUtils.delay(4500);
                console.log('üéØ –ö–ª–∏–∫ –ø–æ –≤—Ç–æ—Ä–æ–º—É –ø–æ–ª–∏–≥–æ–Ω—É –º–∞—Ä—à—Ä—É—Ç–∞...');
                const polygon2 = document.querySelector('polygon.hexagon[points="37.5,-59.25 55.5,-69.75 55.5,-90.75 37.5,-101.25 19.5,-90.75 19.5,-69.75 37.5,-59.25"]');
                if (polygon2) {
                    console.log('‚úÖ –ü–æ–ª–∏–≥–æ–Ω 2 –Ω–∞–π–¥–µ–Ω, –≤—ã–ø–æ–ª–Ω—è—é –∫–ª–∏–∫...');
                    const rect2 = polygon2.getBoundingClientRect();
                    const clickEvent2 = new MouseEvent('click', {
                        bubbles: true,
                        cancelable: true,
                        view: window,
                        clientX: rect2.left + rect2.width / 2,
                        clientY: rect2.top + rect2.height / 2
                    });
                    polygon2.dispatchEvent(clickEvent2);
                    console.log('üñ±Ô∏è –ö–ª–∏–∫ –ø–æ –ø–æ–ª–∏–≥–æ–Ω—É 2 –≤—ã–ø–æ–ª–Ω–µ–Ω —á–µ—Ä–µ–∑ MouseEvent');
                    await window.BotUtils.delay(100);
                    
                    // –ö–ª–∏–∫ "–ü–µ—Ä–µ–π—Ç–∏" –ø–æ—Å–ª–µ –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª–∏–≥–æ–Ω–∞
                    const go2Success = await window.BotUtils.clickByTextContent('–ü–µ—Ä–µ–π—Ç–∏', 5000);
                    if (go2Success) {
                        console.log('‚úÖ –ö–ª–∏–∫ –ø–æ "–ü–µ—Ä–µ–π—Ç–∏" –ø–æ—Å–ª–µ –ø–æ–ª–∏–≥–æ–Ω–∞ 2 –≤—ã–ø–æ–ª–Ω–µ–Ω');
                        await window.BotUtils.delay(100);
                    }
                } else {
                    console.log('‚ùå –ü–æ–ª–∏–≥–æ–Ω 2 –Ω–µ –Ω–∞–π–¥–µ–Ω');
                }

                // –¢—Ä–µ—Ç–∏–π –ø–æ–ª–∏–≥–æ–Ω —á–µ—Ä–µ–∑ 4.5 —Å–µ–∫—É–Ω–¥—ã
                await window.BotUtils.delay(4500);
                console.log('üéØ –ö–ª–∏–∫ –ø–æ —Ç—Ä–µ—Ç—å–µ–º—É –ø–æ–ª–∏–≥–æ–Ω—É –º–∞—Ä—à—Ä—É—Ç–∞...');
                const polygon3 = document.querySelector('polygon.hexagon[points="57,-93 75,-103.5 75,-124.5 57,-135 39,-124.5 39,-103.5 57,-93"]');
                if (polygon3) {
                    console.log('‚úÖ –ü–æ–ª–∏–≥–æ–Ω 3 –Ω–∞–π–¥–µ–Ω, –≤—ã–ø–æ–ª–Ω—è—é –∫–ª–∏–∫...');
                    const rect3 = polygon3.getBoundingClientRect();
                    const clickEvent3 = new MouseEvent('click', {
                        bubbles: true,
                        cancelable: true,
                        view: window,
                        clientX: rect3.left + rect3.width / 2,
                        clientY: rect3.top + rect3.height / 2
                    });
                    polygon3.dispatchEvent(clickEvent3);
                    console.log('üñ±Ô∏è –ö–ª–∏–∫ –ø–æ –ø–æ–ª–∏–≥–æ–Ω—É 3 –≤—ã–ø–æ–ª–Ω–µ–Ω —á–µ—Ä–µ–∑ MouseEvent');
                    await window.BotUtils.delay(100);
                    
                    // –ö–ª–∏–∫ "–ü–µ—Ä–µ–π—Ç–∏" –ø–æ—Å–ª–µ —Ç—Ä–µ—Ç—å–µ–≥–æ –ø–æ–ª–∏–≥–æ–Ω–∞
                    const go3Success = await window.BotUtils.clickByTextContent('–ü–µ—Ä–µ–π—Ç–∏', 5000);
                    if (go3Success) {
                        console.log('‚úÖ –ö–ª–∏–∫ –ø–æ "–ü–µ—Ä–µ–π—Ç–∏" –ø–æ—Å–ª–µ –ø–æ–ª–∏–≥–æ–Ω–∞ 3 –≤—ã–ø–æ–ª–Ω–µ–Ω');
                        await window.BotUtils.delay(100);
                    }
                } else {
                    console.log('‚ùå –ü–æ–ª–∏–≥–æ–Ω 3 –Ω–µ –Ω–∞–π–¥–µ–Ω');
                }

                // –ß–µ—Ç–≤–µ—Ä—Ç—ã–π (–ø–æ–≤—Ç–æ—Ä–Ω—ã–π) –∫–ª–∏–∫ –ø–æ —Ç—Ä–µ—Ç—å–µ–º—É –ø–æ–ª–∏–≥–æ–Ω—É —á–µ—Ä–µ–∑ 4.5 —Å–µ–∫—É–Ω–¥—ã
                await window.BotUtils.delay(4500);
                console.log('üéØ –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∫–ª–∏–∫ –ø–æ —Ç—Ä–µ—Ç—å–µ–º—É –ø–æ–ª–∏–≥–æ–Ω—É...');
                const polygon4 = document.querySelector('polygon.hexagon[points="57,-93 75,-103.5 75,-124.5 57,-135 39,-124.5 39,-103.5 57,-93"]');
                if (polygon4) {
                    console.log('‚úÖ –ü–æ–ª–∏–≥–æ–Ω 4 (–ø–æ–≤—Ç–æ—Ä–Ω—ã–π) –Ω–∞–π–¥–µ–Ω, –≤—ã–ø–æ–ª–Ω—è—é –∫–ª–∏–∫...');
                    const rect4 = polygon4.getBoundingClientRect();
                    const clickEvent4 = new MouseEvent('click', {
                        bubbles: true,
                        cancelable: true,
                        view: window,
                        clientX: rect4.left + rect4.width / 2,
                        clientY: rect4.top + rect4.height / 2
                    });
                    polygon4.dispatchEvent(clickEvent4);
                    console.log('üñ±Ô∏è –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∫–ª–∏–∫ –ø–æ –ø–æ–ª–∏–≥–æ–Ω—É 3 –≤—ã–ø–æ–ª–Ω–µ–Ω —á–µ—Ä–µ–∑ MouseEvent');
                    await window.BotUtils.delay(100);
                    
                    // –ù–ï –Ω–∞–∂–∏–º–∞–µ–º "–ü–µ—Ä–µ–π—Ç–∏", –∞ –∏—â–µ–º –±–æ—Å—Å–∞
                    console.log('üëπ –ò—â—É –∏–∫–æ–Ω–∫—É –±–æ—Å—Å–∞...');
                    await window.BotUtils.delay(1000); // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –±–æ—Å—Å–∞
                    
                    const bossIcon = await window.BotUtils.waitFor(() => {
                        if (abortSignal && abortSignal.aborted) throw new Error('bossFarmLoopVT aborted');
                        return Array.from(document.querySelectorAll('use')).find(use => {
                            const href = use.getAttribute('xlink:href') || use.getAttribute('href');
                            return href && href.includes('boss');
                        });
                    }, 200, 10000);
                    
                    if (bossIcon) {
                        console.log('‚úÖ –ò–∫–æ–Ω–∫–∞ –±–æ—Å—Å–∞ –Ω–∞–π–¥–µ–Ω–∞, –∫–ª–∏–∫–∞—é...');
                        bossIcon.click();
                        await window.BotUtils.delay(100);
                        
                        // –ó–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª –±–æ—è —Å –±–æ—Å—Å–æ–º
                        console.log('üî• –ù–∞—á–∏–Ω–∞—é –±–æ–π —Å –±–æ—Å—Å–æ–º –í–¢...');
                        await this.bossFightLoopWithMonitoring(abortSignal);
                    } else {
                        console.log('‚ùå –ò–∫–æ–Ω–∫–∞ –±–æ—Å—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                    }
                } else {
                    console.log('‚ùå –ü–æ–ª–∏–≥–æ–Ω 4 (–ø–æ–≤—Ç–æ—Ä–Ω—ã–π) –Ω–µ –Ω–∞–π–¥–µ–Ω');
                }

                console.log('‚úÖ –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–ª–∏–∫–æ–≤ –ø–æ –ø–æ–ª–∏–≥–æ–Ω–∞–º –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
                
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ –±–æ—Å—Å–∞ –í–¢:', error);
                await window.BotUtils.delay(100); // –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
            }
        }
    },

    /**
     * –§–∞—Ä–º –±–æ—Å—Å–∞ –ß–¢
     */
    async bossFarmLoopCHT(abortSignal) {
        console.log('üî• –ó–∞–ø—É—Å–∫ —Ñ–∞—Ä–º–∞ –±–æ—Å—Å–∞ –ß–¢...');
        
        while (true) {
            if (abortSignal && abortSignal.aborted) throw new Error('bossFarmLoopCHT aborted');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É "–í –≥–æ—Ä–æ–¥" –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º
            await window.BotNavigation.checkAndReturnToCity();
            
            try {
                // 1. –ö–ª–∏–∫ –Ω–∞ "–°—Ä–∞–∂–µ–Ω–∏—è" - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ —Ñ—É–Ω–∫—Ü–∏—é —á—Ç–æ –∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ
                console.log('1Ô∏è‚É£ –ö–ª–∏–∫ –Ω–∞ "–°—Ä–∞–∂–µ–Ω–∏—è"...');
                const battlesSuccess = await window.BotUtils.clickByTextContent('–°—Ä–∞–∂–µ–Ω–∏—è', 5000);
                if (battlesSuccess) {
                    console.log('‚úÖ –ö–ª–∏–∫ –ø–æ "–°—Ä–∞–∂–µ–Ω–∏—è" –≤—ã–ø–æ–ª–Ω–µ–Ω');
                    await window.BotUtils.delay(100);
                } else {
                    throw new Error('–ö–Ω–æ–ø–∫–∞ "–°—Ä–∞–∂–µ–Ω–∏—è" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                }

                // 2. –ö–ª–∏–∫ –Ω–∞ "–°—Ç–∞—Ä—ã–µ —Ä—É–¥–Ω–∏–∫–∏" - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ —Ñ—É–Ω–∫—Ü–∏—é —á—Ç–æ –∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ
                console.log('2Ô∏è‚É£ –ö–ª–∏–∫ –Ω–∞ "–°—Ç–∞—Ä—ã–µ —Ä—É–¥–Ω–∏–∫–∏"...');
                const minesSuccess = await window.BotUtils.clickByLocationName('–°—Ç–∞—Ä—ã–µ —Ä—É–¥–Ω–∏–∫–∏', 5000);
                if (minesSuccess) {
                    console.log('‚úÖ –ö–ª–∏–∫ –ø–æ "–°—Ç–∞—Ä—ã–µ —Ä—É–¥–Ω–∏–∫–∏" –≤—ã–ø–æ–ª–Ω–µ–Ω');
                    await window.BotUtils.delay(100);
                } else {
                    throw new Error('–õ–æ–∫–∞—Ü–∏—è "–°—Ç–∞—Ä—ã–µ —Ä—É–¥–Ω–∏–∫–∏" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                }

                // 3. –ö–ª–∏–∫ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≥–µ–∫—Å–∞–≥–æ–Ω
                console.log('3Ô∏è‚É£ –ö–ª–∏–∫ –Ω–∞ —Ü–µ–ª–µ–≤–æ–π –≥–µ–∫—Å–∞–≥–æ–Ω...');
                
                // –ò—â–µ–º –ø–æ–ª–∏–≥–æ–Ω –ø–æ —Ç–æ—á–Ω—ã–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º (–ø–µ—Ä–≤—ã–π –ø–æ–ª–∏–≥–æ–Ω –º–∞—Ä—à—Ä—É—Ç–∞ –ß–¢)
                const polygon = document.querySelector('polygon.hexagon[points="-1.5,8.25 16.5,-2.25 16.5,-23.25 -1.5,-33.75 -19.5,-23.25 -19.5,-2.25 -1.5,8.25"]');
                
                if (polygon) {
                    console.log('‚úÖ –ü–æ–ª–∏–≥–æ–Ω –Ω–∞–π–¥–µ–Ω, –≤—ã–ø–æ–ª–Ω—è—é –∫–ª–∏–∫...');
                    
                    // SVG —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –∏–º–µ—é—Ç –º–µ—Ç–æ–¥–∞ .click(), –∏—Å–ø–æ–ª—å–∑—É–µ–º dispatchEvent
                    const rect = polygon.getBoundingClientRect();
                    const clickEvent = new MouseEvent('click', {
                        bubbles: true,
                        cancelable: true,
                        view: window,
                        clientX: rect.left + rect.width / 2,
                        clientY: rect.top + rect.height / 2
                    });
                    
                    polygon.dispatchEvent(clickEvent);
                    console.log('üñ±Ô∏è –ö–ª–∏–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω —á–µ—Ä–µ–∑ MouseEvent');
                    await window.BotUtils.delay(100);
                } else {
                    throw new Error('–ü–æ–ª–∏–≥–æ–Ω —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω');
                }

                // 4. –ö–ª–∏–∫ –Ω–∞ "–ü–µ—Ä–µ–π—Ç–∏" - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ —Ñ—É–Ω–∫—Ü–∏—é —á—Ç–æ –∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ
                console.log('4Ô∏è‚É£ –ö–ª–∏–∫ –Ω–∞ "–ü–µ—Ä–µ–π—Ç–∏"...');
                const goSuccess = await window.BotUtils.clickByTextContent('–ü–µ—Ä–µ–π—Ç–∏', 5000);
                if (goSuccess) {
                    console.log('‚úÖ –ö–ª–∏–∫ –ø–æ "–ü–µ—Ä–µ–π—Ç–∏" –≤—ã–ø–æ–ª–Ω–µ–Ω');
                    await window.BotUtils.delay(100);
                } else {
                    throw new Error('–ö–Ω–æ–ø–∫–∞ "–ü–µ—Ä–µ–π—Ç–∏" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                }

                // 5. –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–ª–∏–∫–æ–≤ –ø–æ –ø–æ–ª–∏–≥–æ–Ω–∞–º —á–µ—Ä–µ–∑ 4.5 —Å–µ–∫—É–Ω–¥ –∫–∞–∂–¥—ã–π
                console.log('5Ô∏è‚É£ –ù–∞—á–∏–Ω–∞—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–ª–∏–∫–æ–≤ –ø–æ –ø–æ–ª–∏–≥–æ–Ω–∞–º...');
                
                // –ü–µ—Ä–≤—ã–π –ø–æ–ª–∏–≥–æ–Ω —á–µ—Ä–µ–∑ 4.5 —Å–µ–∫—É–Ω–¥—ã
                await window.BotUtils.delay(4500);
                console.log('üéØ –ö–ª–∏–∫ –ø–æ –ø–µ—Ä–≤–æ–º—É –ø–æ–ª–∏–≥–æ–Ω—É –º–∞—Ä—à—Ä—É—Ç–∞...');
                const polygon1 = document.querySelector('polygon.hexagon[points="18,-25.5 36,-36 36,-57 18,-67.5 0,-57 0,-36 18,-25.5"]');
                if (polygon1) {
                    console.log('‚úÖ –ü–æ–ª–∏–≥–æ–Ω 1 –Ω–∞–π–¥–µ–Ω, –≤—ã–ø–æ–ª–Ω—è—é –∫–ª–∏–∫...');
                    const rect1 = polygon1.getBoundingClientRect();
                    const clickEvent1 = new MouseEvent('click', {
                        bubbles: true,
                        cancelable: true,
                        view: window,
                        clientX: rect1.left + rect1.width / 2,
                        clientY: rect1.top + rect1.height / 2
                    });
                    polygon1.dispatchEvent(clickEvent1);
                    console.log('üñ±Ô∏è –ö–ª–∏–∫ –ø–æ –ø–æ–ª–∏–≥–æ–Ω—É 1 –≤—ã–ø–æ–ª–Ω–µ–Ω —á–µ—Ä–µ–∑ MouseEvent');
                    await window.BotUtils.delay(100);
                    
                    // –ö–ª–∏–∫ "–ü–µ—Ä–µ–π—Ç–∏" –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª–∏–≥–æ–Ω–∞
                    const go1Success = await window.BotUtils.clickByTextContent('–ü–µ—Ä–µ–π—Ç–∏', 5000);
                    if (go1Success) {
                        console.log('‚úÖ –ö–ª–∏–∫ –ø–æ "–ü–µ—Ä–µ–π—Ç–∏" –ø–æ—Å–ª–µ –ø–æ–ª–∏–≥–æ–Ω–∞ 1 –≤—ã–ø–æ–ª–Ω–µ–Ω');
                        await window.BotUtils.delay(100);
                    }
                } else {
                    console.log('‚ùå –ü–æ–ª–∏–≥–æ–Ω 1 –Ω–µ –Ω–∞–π–¥–µ–Ω');
                }

                // –í—Ç–æ—Ä–æ–π –ø–æ–ª–∏–≥–æ–Ω —á–µ—Ä–µ–∑ 4.5 —Å–µ–∫—É–Ω–¥—ã
                await window.BotUtils.delay(4500);
                console.log('üéØ –ö–ª–∏–∫ –ø–æ –≤—Ç–æ—Ä–æ–º—É –ø–æ–ª–∏–≥–æ–Ω—É –º–∞—Ä—à—Ä—É—Ç–∞...');
                const polygon2 = document.querySelector('polygon.hexagon[points="37.5,-59.25 55.5,-69.75 55.5,-90.75 37.5,-101.25 19.5,-90.75 19.5,-69.75 37.5,-59.25"]');
                if (polygon2) {
                    console.log('‚úÖ –ü–æ–ª–∏–≥–æ–Ω 2 –Ω–∞–π–¥–µ–Ω, –≤—ã–ø–æ–ª–Ω—è—é –∫–ª–∏–∫...');
                    const rect2 = polygon2.getBoundingClientRect();
                    const clickEvent2 = new MouseEvent('click', {
                        bubbles: true,
                        cancelable: true,
                        view: window,
                        clientX: rect2.left + rect2.width / 2,
                        clientY: rect2.top + rect2.height / 2
                    });
                    polygon2.dispatchEvent(clickEvent2);
                    console.log('üñ±Ô∏è –ö–ª–∏–∫ –ø–æ –ø–æ–ª–∏–≥–æ–Ω—É 2 –≤—ã–ø–æ–ª–Ω–µ–Ω —á–µ—Ä–µ–∑ MouseEvent');
                    await window.BotUtils.delay(100);
                    
                    // –ö–ª–∏–∫ "–ü–µ—Ä–µ–π—Ç–∏" –ø–æ—Å–ª–µ –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª–∏–≥–æ–Ω–∞
                    const go2Success = await window.BotUtils.clickByTextContent('–ü–µ—Ä–µ–π—Ç–∏', 5000);
                    if (go2Success) {
                        console.log('‚úÖ –ö–ª–∏–∫ –ø–æ "–ü–µ—Ä–µ–π—Ç–∏" –ø–æ—Å–ª–µ –ø–æ–ª–∏–≥–æ–Ω–∞ 2 –≤—ã–ø–æ–ª–Ω–µ–Ω');
                        await window.BotUtils.delay(100);
                    }
                } else {
                    console.log('‚ùå –ü–æ–ª–∏–≥–æ–Ω 2 –Ω–µ –Ω–∞–π–¥–µ–Ω');
                }

                // –¢—Ä–µ—Ç–∏–π –ø–æ–ª–∏–≥–æ–Ω —á–µ—Ä–µ–∑ 4.5 —Å–µ–∫—É–Ω–¥—ã
                await window.BotUtils.delay(4500);
                console.log('üéØ –ö–ª–∏–∫ –ø–æ —Ç—Ä–µ—Ç—å–µ–º—É –ø–æ–ª–∏–≥–æ–Ω—É –º–∞—Ä—à—Ä—É—Ç–∞...');
                const polygon3 = document.querySelector('polygon.hexagon[points="57,-93 75,-103.5 75,-124.5 57,-135 39,-124.5 39,-103.5 57,-93"]');
                if (polygon3) {
                    console.log('‚úÖ –ü–æ–ª–∏–≥–æ–Ω 3 –Ω–∞–π–¥–µ–Ω, –≤—ã–ø–æ–ª–Ω—è—é –∫–ª–∏–∫...');
                    const rect3 = polygon3.getBoundingClientRect();
                    const clickEvent3 = new MouseEvent('click', {
                        bubbles: true,
                        cancelable: true,
                        view: window,
                        clientX: rect3.left + rect3.width / 2,
                        clientY: rect3.top + rect3.height / 2
                    });
                    polygon3.dispatchEvent(clickEvent3);
                    console.log('üñ±Ô∏è –ö–ª–∏–∫ –ø–æ –ø–æ–ª–∏–≥–æ–Ω—É 3 –≤—ã–ø–æ–ª–Ω–µ–Ω —á–µ—Ä–µ–∑ MouseEvent');
                    await window.BotUtils.delay(100);
                    
                    // –ö–ª–∏–∫ "–ü–µ—Ä–µ–π—Ç–∏" –ø–æ—Å–ª–µ —Ç—Ä–µ—Ç—å–µ–≥–æ –ø–æ–ª–∏–≥–æ–Ω–∞
                    const go3Success = await window.BotUtils.clickByTextContent('–ü–µ—Ä–µ–π—Ç–∏', 5000);
                    if (go3Success) {
                        console.log('‚úÖ –ö–ª–∏–∫ –ø–æ "–ü–µ—Ä–µ–π—Ç–∏" –ø–æ—Å–ª–µ –ø–æ–ª–∏–≥–æ–Ω–∞ 3 –≤—ã–ø–æ–ª–Ω–µ–Ω');
                        await window.BotUtils.delay(100);
                    }
                } else {
                    console.log('‚ùå –ü–æ–ª–∏–≥–æ–Ω 3 –Ω–µ –Ω–∞–π–¥–µ–Ω');
                }

                // –ß–µ—Ç–≤–µ—Ä—Ç—ã–π (–ø–æ–≤—Ç–æ—Ä–Ω—ã–π) –∫–ª–∏–∫ –ø–æ —Ç—Ä–µ—Ç—å–µ–º—É –ø–æ–ª–∏–≥–æ–Ω—É —á–µ—Ä–µ–∑ 4.5 —Å–µ–∫—É–Ω–¥—ã
                await window.BotUtils.delay(4500);
                console.log('üéØ –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∫–ª–∏–∫ –ø–æ —Ç—Ä–µ—Ç—å–µ–º—É –ø–æ–ª–∏–≥–æ–Ω—É...');
                const polygon4 = document.querySelector('polygon.hexagon[points="57,-93 75,-103.5 75,-124.5 57,-135 39,-124.5 39,-103.5 57,-93"]');
                if (polygon4) {
                    console.log('‚úÖ –ü–æ–ª–∏–≥–æ–Ω 4 (–ø–æ–≤—Ç–æ—Ä–Ω—ã–π) –Ω–∞–π–¥–µ–Ω, –≤—ã–ø–æ–ª–Ω—è—é –∫–ª–∏–∫...');
                    const rect4 = polygon4.getBoundingClientRect();
                    const clickEvent4 = new MouseEvent('click', {
                        bubbles: true,
                        cancelable: true,
                        view: window,
                        clientX: rect4.left + rect4.width / 2,
                        clientY: rect4.top + rect4.height / 2
                    });
                    polygon4.dispatchEvent(clickEvent4);
                    console.log('üñ±Ô∏è –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∫–ª–∏–∫ –ø–æ –ø–æ–ª–∏–≥–æ–Ω—É 3 –≤—ã–ø–æ–ª–Ω–µ–Ω —á–µ—Ä–µ–∑ MouseEvent');
                    await window.BotUtils.delay(100);
                    
                    // –ù–ï –Ω–∞–∂–∏–º–∞–µ–º "–ü–µ—Ä–µ–π—Ç–∏", –∞ –∏—â–µ–º –±–æ—Å—Å–∞
                    console.log('üëπ –ò—â—É –∏–∫–æ–Ω–∫—É –±–æ—Å—Å–∞...');
                    await window.BotUtils.delay(1000); // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –±–æ—Å—Å–∞
                    
                    const bossIcon = await window.BotUtils.waitFor(() => {
                        if (abortSignal && abortSignal.aborted) throw new Error('bossFarmLoopCHT aborted');
                        return Array.from(document.querySelectorAll('use')).find(use => {
                            const href = use.getAttribute('xlink:href') || use.getAttribute('href');
                            return href && href.includes('boss');
                        });
                    }, 200, 10000);
                    
                    if (bossIcon) {
                        console.log('‚úÖ –ò–∫–æ–Ω–∫–∞ –±–æ—Å—Å–∞ –Ω–∞–π–¥–µ–Ω–∞, –∫–ª–∏–∫–∞—é...');
                        bossIcon.click();
                        await window.BotUtils.delay(100);
                        
                        // –ó–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª –±–æ—è —Å –±–æ—Å—Å–æ–º
                        console.log('üî• –ù–∞—á–∏–Ω–∞—é –±–æ–π —Å –±–æ—Å—Å–æ–º –ß–¢...');
                        await this.bossFightLoopWithMonitoring(abortSignal);
                    } else {
                        console.log('‚ùå –ò–∫–æ–Ω–∫–∞ –±–æ—Å—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                    }
                } else {
                    console.log('‚ùå –ü–æ–ª–∏–≥–æ–Ω 4 (–ø–æ–≤—Ç–æ—Ä–Ω—ã–π) –Ω–µ –Ω–∞–π–¥–µ–Ω');
                }

                console.log('‚úÖ –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–ª–∏–∫–æ–≤ –ø–æ –ø–æ–ª–∏–≥–æ–Ω–∞–º –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
                
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ –±–æ—Å—Å–∞ –ß–¢:', error);
                await window.BotUtils.delay(100); // –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
            }
        }
    },

    /**
     * –¶–∏–∫–ª –±–æ—è —Å –±–æ—Å—Å–æ–º —Å –ø–æ–ª–Ω—ã–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º
     */
    async bossFightLoopWithMonitoring(abortSignal) {
        console.log('üî• –ó–∞–ø—É—Å–∫ –±–æ—è —Å –±–æ—Å—Å–æ–º —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º...');
        
        while (true) {
            if (abortSignal && abortSignal.aborted) throw new Error('bossFightLoopWithMonitoring aborted');

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É "–í –≥–æ—Ä–æ–¥" (—Å–º–µ—Ä—Ç—å)
            await window.BotNavigation.checkAndReturnToCity();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –∏ –º–∞–Ω—É
            if (window.BotCombat && window.BotCombat.checkManaAndHealth) {
                await window.BotCombat.checkManaAndHealth();
            }

            // –ò—â–µ–º –∏–∫–æ–Ω–∫—É –±–æ—Å—Å–∞
            let bossIcon = document.querySelector('tui-icon.svg-icon[style*="mob-type-boss.svg"]');
            if (!bossIcon) {
                console.log('‚ö†Ô∏è –ò–∫–æ–Ω–∫–∞ –±–æ—Å—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤–æ–∑–º–æ–∂–Ω–æ –±–æ—Å—Å –º–µ—Ä—Ç–≤. –ó–∞–≤–µ—Ä—à–∞—é –±–æ–π...');
                break;
            }
            
            // –ö–ª–∏–∫–∞–µ–º –Ω–∞ –±–æ—Å—Å–∞ –¥–ª—è —Ç–∞—Ä–≥–µ—Ç–∞
            bossIcon.click();
            await window.BotUtils.delay(100);

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –±–æ—Å—Å –∂–∏–≤
            const bossCard = document.querySelector('app-profile-card.target');
            if (bossCard) {
                const deadIcon = bossCard.querySelector('tui-icon.svg-icon[style*="dead.svg"]');
                if (deadIcon) {
                    console.log('üíÄ –ë–æ—Å—Å –ø–æ–±–µ–∂–¥–µ–Ω!');
                    break;
                }
            }

            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª–∞—Å—Å –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∫–∏–ª–ª—ã
            window.BotConfig.selectedClass = window.BotUtils.detectPlayerClass();
            const skills = window.BotConfig.CLASS_SKILLS[window.BotConfig.selectedClass];
            
            if (skills && skills.attack && skills.attack.length) {
                for (const skill of skills.attack) {
                    if (window.BotCombat && window.BotCombat.useSkill) {
                        await window.BotCombat.useSkill(skill);
                        await window.BotUtils.delay(100);
                    }
                }
            }
            
            // –î–ª—è –ª—É—á–Ω–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –º—É–ª—å—Ç–∏—Ç–∞—Ä–≥–µ—Ç —Å–∫–∏–ª–ª
            if (window.BotConfig.selectedClass === '–õ—É—á–Ω–∏–∫' && skills && skills.multitarget) {
                if (window.BotCombat && window.BotCombat.useSkill) {
                    await window.BotCombat.useSkill(skills.multitarget);
                    await window.BotUtils.delay(100);
                }
            }

            await window.BotUtils.delay(200);
        }
        
        console.log('‚úÖ –ë–æ–π —Å –±–æ—Å—Å–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω');
    },

    /**
     * –ê–Ω–∞–ª–∏–∑ –∞—Ä—Å–µ–Ω–∞–ª–∞ –≥–∏–ª—å–¥–∏–∏
     */
    async analyzeArsenal(spreadsheetId = null) {
        try {
            console.log('üèõÔ∏è –ù–∞—á–∏–Ω–∞—é –∞–Ω–∞–ª–∏–∑ —Å—É–Ω–¥—É–∫–∞...');
            
            // 1. –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –°—Ç—Ä–æ–µ–Ω–∏—è
            console.log('1Ô∏è‚É£ –ü–µ—Ä–µ—Ö–æ–¥ –≤ –°—Ç—Ä–æ–µ–Ω–∏—è...');
            const buildingsButton = await window.BotUtils.waitForElement('div.button-content', '–°—Ç—Ä–æ–µ–Ω–∏—è', 5000);
            if (buildingsButton) {
                buildingsButton.click();
                await window.BotUtils.delay(100);
                console.log('‚úÖ –ü–µ—Ä–µ—à–ª–∏ –≤ –°—Ç—Ä–æ–µ–Ω–∏—è');
                } else {
                console.error('‚ùå –ö–Ω–æ–ø–∫–∞ "–°—Ç—Ä–æ–µ–Ω–∏—è" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                return;
            }

            // 2. –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –£—Å–∞–¥—å–±–∞
            console.log('2Ô∏è‚É£ –ü–µ—Ä–µ—Ö–æ–¥ –≤ –£—Å–∞–¥—å–±—É...');
            const mansionButton = await window.BotUtils.waitForElement('div.location-name', '–£—Å–∞–¥—å–±–∞', 5000);
            if (mansionButton) {
                mansionButton.closest('.location-info-header').click();
                await window.BotUtils.delay(100);
                console.log('‚úÖ –ü–µ—Ä–µ—à–ª–∏ –≤ –£—Å–∞–¥—å–±—É');
            } else {
                console.error('‚ùå –ö–Ω–æ–ø–∫–∞ "–£—Å–∞–¥—å–±–∞" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                return;
            }

            // 3. –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –°—É–Ω–¥—É–∫
            console.log('3Ô∏è‚É£ –ü–µ—Ä–µ—Ö–æ–¥ –≤ –°—É–Ω–¥—É–∫...');
            const chestButton = await window.BotUtils.waitForElement('div.location-name', '–°—É–Ω–¥—É–∫', 5000);
            if (chestButton) {
                chestButton.closest('.location-content').click();
                await window.BotUtils.delay(100);
                console.log('‚úÖ –ü–µ—Ä–µ—à–ª–∏ –≤ –°—É–Ω–¥—É–∫');
            } else {
                console.error('‚ùå –ö–Ω–æ–ø–∫–∞ "–°—É–Ω–¥—É–∫" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                return;
            }

            // 4. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ —Å—É–Ω–¥—É–∫–µ
            console.log('4Ô∏è‚É£ –ù–∞—á–∏–Ω–∞—é –∞–Ω–∞–ª–∏–∑ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ —Å—É–Ω–¥—É–∫–µ...');
            const itemsGroupBody = document.querySelector('div.items-group-body');
            if (!itemsGroupBody) {
                console.error('‚ùå –ì—Ä—É–ø–ø–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                return;
            }

            const itemCards = itemsGroupBody.querySelectorAll('app-item-card');
            console.log(`üîç –ù–∞–π–¥–µ–Ω–æ ${itemCards.length} –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞`);

            let analyzedCount = 0;
            const itemsData = []; // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö

            for (let i = 0; i < itemCards.length; i++) {
                const item = itemCards[i];
                console.log(`üì¶ –ê–Ω–∞–ª–∏–∑ –ø—Ä–µ–¥–º–µ—Ç–∞ ${i + 1}/${itemCards.length}...`);
                
                try {
                    // –ö–ª–∏–∫–∞–µ–º –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç
                    item.click();
                    await window.BotUtils.delay(10);

                    // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
                    const dialog = await window.BotUtils.waitForElement('app-dialog-container.dialog-container-item', null, 3000);
                    if (!dialog) {
                        console.log('‚ö†Ô∏è –î–∏–∞–ª–æ–≥ –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–µ –æ—Ç–∫—Ä—ã–ª—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
                        continue;
                    }

                    // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–µ–¥–º–µ—Ç–µ
                    const itemInfo = this.extractItemInfo(dialog);
                    itemsData.push(itemInfo);
                    
                    analyzedCount++;

                    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
                    const closeButton = dialog.querySelector('tui-icon.svg-icon[style*="close.svg"]');
                    if (closeButton) {
                        closeButton.click();
                        await window.BotUtils.delay(10);
                    }

                } catch (error) {
                    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –ø—Ä–µ–¥–º–µ—Ç–∞ ${i + 1}:`, error);
                }
            }

            console.log(`\nüéâ === –ê–ù–ê–õ–ò–ó –ó–ê–í–ï–†–®–ï–ù ===`);
            console.log(`üìä –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ${analyzedCount}/${itemCards.length}`);

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Google Sheets (–∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π spreadsheetId –∏–ª–∏ default)
            if (itemsData.length > 0) {
                await this.sendToGoogleSheets(itemsData, spreadsheetId);
            }

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Å—É–Ω–¥—É–∫–∞:', error);
        }
    },

    /**
     * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–µ–¥–º–µ—Ç–µ –∏–∑ –¥–∏–∞–ª–æ–≥–∞
     * @param {HTMLElement} dialog - –¥–∏–∞–ª–æ–≥ –ø—Ä–µ–¥–º–µ—Ç–∞
     */
    extractItemInfo(dialog) {
        const info = {};

        try {
            // –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞
            const nameElement = dialog.querySelector('.dialog-header');
            info.name = nameElement ? nameElement.textContent.trim() : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';

            // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞
            const imageElement = dialog.querySelector('img.item-image, img[src*="/gear/"], img[src*="/items/"], .item-icon img, .dialog-content img');
            if (imageElement) {
                info.imageUrl = imageElement.getAttribute('src') || imageElement.src || '';
            } else {
                info.imageUrl = '';
            }

            // –ú–æ—â—å –ø—Ä–µ–¥–º–µ—Ç–∞ (–ì–°)
            const gearScoreElement = dialog.querySelector('.gear-score-value');
            info.gearScore = gearScoreElement ? parseInt(gearScoreElement.textContent.trim()) : 0;

            // –¢–∏–ø –ø—Ä–µ–¥–º–µ—Ç–∞
            const typeElement = dialog.querySelector('.item-tags');
            info.type = typeElement ? typeElement.textContent.trim() : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';

            // –£—Ä–æ–≤–µ–Ω—å
            const tierElement = dialog.querySelector('.item-tier');
            info.tier = tierElement ? tierElement.textContent.trim() : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';

            // –ö–∞—á–µ—Å—Ç–≤–æ
            const qualityElement = dialog.querySelector('.item-quality');
            info.quality = qualityElement ? qualityElement.textContent.trim() : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';

            // –û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
            info.stats = [];
            const statElements = dialog.querySelectorAll('.item-index-item');
            statElements.forEach(stat => {
                const valueElement = stat.querySelector('.item-index-value');
                const keyElement = stat.querySelector('.item-index-key');
                if (valueElement && keyElement) {
                    info.stats.push({
                        value: valueElement.textContent.trim(),
                        name: keyElement.textContent.trim()
                    });
                }
            });

            // –ú–∞–≥–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞
            info.magicProps = [];
            const magicElements = dialog.querySelectorAll('app-magic-prop');
            magicElements.forEach(prop => {
                const valueElement = prop.querySelector('.magic-prop-value');
                const nameElement = prop.querySelector('.magic-prop-name');
                const percentElement = prop.querySelector('.magic-prop-percent');
                
                if (valueElement && nameElement) {
                    info.magicProps.push({
                        value: valueElement.textContent.trim(),
                        name: nameElement.textContent.trim(),
                        percent: percentElement ? percentElement.textContent.trim() : ''
                    });
                }
            });

            // –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è
            info.requirements = [];
            const reqElements = dialog.querySelectorAll('.item-requirement');
            reqElements.forEach(req => {
                const keyElement = req.querySelector('.item-requirement-key');
                const valueElement = req.querySelector('.item-requirement-value');
                if (keyElement && valueElement) {
                    info.requirements.push({
                        key: keyElement.textContent.trim(),
                        value: valueElement.textContent.trim()
                    });
                }
            });

        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–µ–¥–º–µ—Ç–µ:', error);
        }

        return info;
    },

    /**
     * –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–µ–¥–º–µ—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å
     * @param {Object} itemInfo - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–¥–º–µ—Ç–µ
     * @param {number} index - –Ω–æ–º–µ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞
     */
    logItemInfo(itemInfo, index) {
        console.log(`üìã –ü–†–ï–î–ú–ï–¢ #${index}:`);
        console.log(`   üè∑Ô∏è  –ù–∞–∑–≤–∞–Ω–∏–µ: ${itemInfo.name}`);
        console.log(`   ‚öîÔ∏è  –¢–∏–ø: ${itemInfo.type}`);
        console.log(`   ‚≠ê  –ö–∞—á–µ—Å—Ç–≤–æ: ${itemInfo.quality}`);
        console.log(`   üî¢  –£—Ä–æ–≤–µ–Ω—å: ${itemInfo.tier}`);
        console.log(`   üí™  –ú–æ—â—å –ø—Ä–µ–¥–º–µ—Ç–∞ (–ì–°): ${itemInfo.gearScore}`);
        
        if (itemInfo.stats.length > 0) {
            console.log(`   üìä  –û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:`);
            itemInfo.stats.forEach(stat => {
                console.log(`       ‚Ä¢ ${stat.name}: ${stat.value}`);
            });
        }
        
        if (itemInfo.magicProps.length > 0) {
            console.log(`   ‚ú®  –ú–∞–≥–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞:`);
            itemInfo.magicProps.forEach(prop => {
                console.log(`       ‚Ä¢ ${prop.name}: ${prop.value} ${prop.percent}`);
            });
        }
        
        if (itemInfo.requirements.length > 0) {
            console.log(`   üìã  –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:`);
            itemInfo.requirements.forEach(req => {
                console.log(`       ‚Ä¢ ${req.key} ${req.value}`);
            });
        }
    },

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ Google Doc —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞
     * @param {Array} itemsData - –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–µ–¥–º–µ—Ç–∞—Ö
     */
    async createGoogleDocWithItems(itemsData) {
        try {
            console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏...');
            
            // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ Google Sheets (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)
            await this.sendToGoogleSheets(itemsData);
            
            // –°–æ–∑–¥–∞–µ–º HTML –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
            const htmlContent = this.generateItemsTableHTML(itemsData);
            
            // –û—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤–æ–µ –æ–∫–Ω–æ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
            const newWindow = window.open('', '_blank', 'width=1200,height=800,scrollbars=yes');
            
            if (newWindow) {
                newWindow.document.write(htmlContent);
                newWindow.document.close();
                console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç–∫—Ä—ã—Ç—ã –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ');
                
                // –¢–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
                try {
                    const textContent = this.generatePlainTextTable(itemsData);
                    await navigator.clipboard.writeText(textContent);
                    console.log('üìã –î–∞–Ω–Ω—ã–µ —Ç–∞–∫–∂–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞');
                } catch (clipboardError) {
                    console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞');
                }
            } else {
                console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –Ω–æ–≤–æ–µ –æ–∫–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫–∞ –≤—Å–ø–ª—ã–≤–∞—é—â–∏—Ö –æ–∫–æ–Ω');
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞:', error);
        }
    },

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Google Sheets
     * @param {Array} itemsData - –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–µ–¥–º–µ—Ç–∞—Ö
     * @param {string} spreadsheetId - ID —Ç–∞–±–ª–∏—Ü—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
     */
    async sendToGoogleSheets(itemsData, spreadsheetId = null) {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ª–∏ Google Apps Script URL
            const gasUrl = window.BotConfig.googleSheetsUrl;
            if (!gasUrl) {
                console.log('üìä Google Sheets –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–º–æ—Ç—Ä–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –≤ –∫–æ–Ω—Å–æ–ª–∏.');
                this.showGoogleSheetsSetupInstructions();
                return;
            }

            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π spreadsheetId –∏–ª–∏ default
            const targetSpreadsheetId = spreadsheetId || this.SPREADSHEET_ID;

            // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤
            const itemsWithIds = itemsData.map(item => ({
                ...item,
                uniqueId: this.generateItemId(item),
                analysisDate: new Date().toISOString(),
                botVersion: window.BotConfig.SCRIPT_COMMIT
            }));

            const payload = {
                action: 'addItems',
                items: itemsWithIds,
                spreadsheetId: targetSpreadsheetId
            };

            // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–¥—Ö–æ–¥–æ–≤
            let success = false;
            let lastError = null;

            // –ü–æ–¥—Ö–æ–¥ 1: –ü—Ä—è–º–æ–π POST –±–µ–∑ CORS –ø—Ä–æ–±–ª–µ–º - –∏—Å–ø–æ–ª—å–∑—É–µ–º content-type: text/plain
            try {
                const response = await fetch(gasUrl, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'text/plain',
                    },
                    body: JSON.stringify(payload)
                });
                
                if (response.ok) {
                    try {
                        const result = await response.text();
                        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Google Sheets');
                        
                        // –ü—ã—Ç–∞–µ–º—Å—è –ø–∞—Ä—Å–∏—Ç—å –∫–∞–∫ JSON
                        try {
                            const jsonResult = JSON.parse(result);
                            if (jsonResult.addedCount > 0) {
                                console.log(`üìä –î–æ–±–∞–≤–ª–µ–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ${jsonResult.addedCount}`);
                            }
                            if (jsonResult.spreadsheetUrl) {
                                console.log(`üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–∞–±–ª–∏—Ü—É: ${jsonResult.spreadsheetUrl}`);
                            }
                        } catch (parseError) {
                            // –ï—Å–ª–∏ –Ω–µ JSON, –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
                        }
                        success = true;
                    } catch (readError) {
                        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã (–æ—Ç–≤–µ—Ç –Ω–µ –ø—Ä–æ—á–∏—Ç–∞–Ω)');
                        success = true; // —Å—á–∏—Ç–∞–µ–º —É—Å–ø–µ—à–Ω—ã–º, –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å 200
                    }
                } else {
                    throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                }
            } catch (error) {
                lastError = error;
            }

            // –ü–æ–¥—Ö–æ–¥ 2: –ï—Å–ª–∏ –ø–µ—Ä–≤—ã–π –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø–æ–ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ form data
            if (!success) {
                try {
                    const formData = new FormData();
                    formData.append('data', JSON.stringify(payload));

                    const response = await fetch(gasUrl, {
                        method: 'POST',
                        body: formData
                    });
                    
                    if (response.ok) {
                        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Google Sheets (form data)');
                        success = true;
                    } else {
                        throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                    }
                } catch (error) {
                    lastError = error;
                }
            }

            // –ü–æ–¥—Ö–æ–¥ 3: No-CORS –∫–∞–∫ –∫—Ä–∞–π–Ω–∏–π —Å–ª—É—á–∞–π
            if (!success) {
                try {
                    await fetch(gasUrl, {
                        method: 'POST',
                        mode: 'no-cors',
                        headers: {
                            'Content-Type': 'text/plain',
                        },
                        body: JSON.stringify(payload)
                    });
                    
                    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Google Sheets (no-cors —Ä–µ–∂–∏–º)');
                    console.log(`üìä –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${itemsWithIds.length} –ø—Ä–µ–¥–º–µ—Ç–æ–≤.`);
                    success = true;
                } catch (error) {
                    lastError = error;
                }
            }

            if (!success) {
                throw lastError || new Error('–í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å –Ω–µ—É–¥–∞—á–µ–π');
            }

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Google Sheets:', error);
            console.log('');
            console.log('üîß === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ ===');
            console.log('');
            
            if (error.message.includes('401')) {
                console.log('üö® –û–®–ò–ë–ö–ê 401 (Unauthorized):');
                console.log('   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–µ–ø–ª–æ—è –≤ Google Apps Script:');
                console.log('      ‚Ä¢ "Execute as" (–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–∞–∫): Me (–Ø)');
                console.log('      ‚Ä¢ "Who has access" (–ö—Ç–æ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø): Anyone (–í—Å–µ)');
                console.log('   2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Å–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
                console.log('   3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –¥–µ–ø–ª–æ–π');
            } else if (error.message.includes('CORS')) {
                console.log('üö® –û–®–ò–ë–ö–ê CORS:');
                console.log('   1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤ Google Apps Script –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è doOptions()');
                console.log('   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏');
            } else {
                console.log('üö® –û–ë–©–ê–Ø –û–®–ò–ë–ö–ê:');
                console.log('   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ URL –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ /exec');
                console.log('   2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ Google Apps Script —Ä–∞–±–æ—Ç–∞–µ—Ç');
                console.log('   3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–∫—Ä–∏–ø—Ç –æ—Ç–¥–µ–ª—å–Ω–æ');
            }
            
            console.log('');
            console.log('üí° –†–ï–®–ï–ù–ò–Ø:');
            console.log('   ‚Ä¢ –î–∞–Ω–Ω—ã–µ –≤—Å—ë —Ä–∞–≤–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω–æ');
            console.log('   ‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–¥–µ–ø–ª–æ–∏—Ç—å Google Apps Script');
            console.log('   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–¥ Google Apps Script (–Ω–∏–∂–µ)');
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
            this.showGoogleSheetsSetupInstructions();
        }
    },

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ URL —Ç–∞–±–ª–∏—Ü—ã –∏–∑ URL Google Apps Script
     * @param {string} gasUrl - URL Google Apps Script
     */
    getSpreadsheetUrlFromGasUrl(gasUrl) {
        try {
            // –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å ID —Å–∫—Ä–∏–ø—Ç–∞ –∏–∑ URL
            const match = gasUrl.match(/\/macros\/s\/([a-zA-Z0-9-_]+)\//);
            if (match && match[1]) {
                // –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ–µ–∫—Ç —Å–∫—Ä–∏–ø—Ç–∞
                return `https://script.google.com/d/${match[1]}/edit`;
            }
        } catch (error) {
            console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ—Å—Ç—Ä–æ–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–∞–±–ª–∏—Ü—É');
        }
        return null;
    },

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞
     * @param {Object} item - –¥–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç–∞
     */
    generateItemId(item) {
        // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –ø—Ä–µ–¥–º–µ—Ç–∞
        const baseString = [
            item.name || '',
            item.type || '',
            item.quality || '',
            item.tier || '',
            item.gearScore || 0,
            item.stats.map(s => `${s.name}:${s.value}`).sort().join('|'),
            item.magicProps.map(p => `${p.name}:${p.value}:${p.percent}`).sort().join('|')
        ].join('::');
        
        // –ü—Ä–æ—Å—Ç–∞—è —Ö–µ—à-—Ñ—É–Ω–∫—Ü–∏—è
        let hash = 0;
        for (let i = 0; i < baseString.length; i++) {
            const char = baseString.charCodeAt(i);
            hash = ((hash << 5) - hash) + char;
            hash = hash & hash; // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ 32-–±–∏—Ç–Ω–æ–µ —á–∏—Å–ª–æ
        }
        
        return Math.abs(hash).toString(36);
    },

    /**
     * –ü–æ–∫–∞–∑ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ Google Sheets
     */
    showGoogleSheetsSetupInstructions() {
        const googleAppsScriptCode = `// IDs —Ç–∞–±–ª–∏—Ü Google Sheets
const SPREADSHEET_ID = '1N2SdlN86wDzEsuzQ7Hlnv-91IAXhNmNMeRuSVtwD-zQ';
const GUILD_SPREADSHEET_ID = '1Ygi2GzE6MB0_9im_npM6N1Im-jHiXVbpIQ_V4CkxeaQ';
const BASE_IMAGE_URL = 'https://ligmar.io/game';

// –û–±—Ä–∞–±–æ—Ç–∫–∞ GET –∑–∞–ø—Ä–æ—Å–æ–≤
function doGet(e) {
  try {
    return ContentService
      .createTextOutput('Google Apps Script —Ä–∞–±–æ—Ç–∞–µ—Ç! –í–µ—Ä—Å–∏—è: v.4.0.0 - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å—Ç–æ–ª–±—Ü–æ–≤ "–°—Ç–∞—Ç—É—Å" –∏ "–û—Ç–¥–∞–ª"')
      .setMimeType(ContentService.MimeType.TEXT);
  } catch (error) {
    Logger.log('–û—à–∏–±–∫–∞ –≤ doGet:', error);
    return ContentService.createTextOutput('–û—à–∏–±–∫–∞: ' + error.toString()).setMimeType(ContentService.MimeType.TEXT);
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ POST –∑–∞–ø—Ä–æ—Å–æ–≤
function doPost(e) {
  try {
    var data;
    
    if (e.postData) {
      if (e.postData.type === 'application/json') {
        data = JSON.parse(e.postData.contents);
      } else if (e.postData.type === 'text/plain') {
        data = JSON.parse(e.postData.contents);
      } else {
        data = JSON.parse(e.parameter.data);
      }
    } else if (e.parameter && e.parameter.data) {
      data = JSON.parse(e.parameter.data);
    } else {
      throw new Error('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –∑–∞–ø—Ä–æ—Å–µ');
    }
    
    Logger.log('–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ:', data);
    
    if (data.action === 'addItems') {
      return addItemsToSheet(data.items, data.spreadsheetId);
    }
    
    return createSuccessResponse({error: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ'});
      
  } catch (error) {
    Logger.log('–û—à–∏–±–∫–∞ –≤ doPost:', error);
    return createSuccessResponse({error: error.toString()});
  }
}

function doOptions() {
  return createSuccessResponse('OK');
}

function createSuccessResponse(data) {
  return ContentService
    .createTextOutput(typeof data === 'string' ? data : JSON.stringify(data))
    .setMimeType(ContentService.MimeType.JSON);
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Google Apps Script
`;

        console.log(`
üìä === –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ù–ê–°–¢–†–û–ô–ö–ï GOOGLE SHEETS ===

üîß –®–∞–≥ 1: –°–æ–∑–¥–∞–π—Ç–µ Google Apps Script
1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://script.google.com
2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç
3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ö–û–î –∏–∑ —Ñ–∞–π–ª–∞ google-apps-script.js (–≤–µ—Å—å —Ñ–∞–π–ª —Ü–µ–ª–∏–∫–æ–º)
4. –í—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –≤ Google Apps Script
5. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç (Ctrl+S)

üîß –®–∞–≥ 2: –†–∞–∑–≤–µ—Ä–Ω–∏—Ç–µ –∫–∞–∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
1. –ù–∞–∂–º–∏—Ç–µ "Deploy" (–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å) > "New deployment" (–ù–æ–≤—ã–π –¥–µ–ø–ª–æ–π)
2. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø: "Web app" (–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ)
3. –ù–∞—Å—Ç—Ä–æ–π–∫–∏:
   ‚Ä¢ Execute as (–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–∞–∫): Me (–Ø)
   ‚Ä¢ Who has access (–ö—Ç–æ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø): Anyone (–í—Å–µ)
4. –ù–∞–∂–º–∏—Ç–µ "Deploy" (–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å)
5. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ URL –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ /exec)

üîß –®–∞–≥ 3: –î–æ–±–∞–≤—å—Ç–µ URL –≤ –∫–æ–Ω—Ñ–∏–≥
URL —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ modules/config.js:
googleSheetsUrl: 'https://script.google.com/macros/s/AKfycbypMl29QsrVtMsagoiX113GHEFpFSBxUxwAJy2EzlFrbTLEBC6ZplakEBsEcnaLuCoe/exec'

üìù –ü–û–õ–ù–´–ô –ö–û–î –ù–ê–•–û–î–ò–¢–°–Ø –í –§–ê–ô–õ–ï google-apps-script.js
========================================`);
        
        console.log(googleAppsScriptCode);
        
        console.log(`========================================

üß™ –®–∞–≥ 4: –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ
1. –í —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ Google Apps Script –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é testFunction()
2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –Ω–µ—Ç –æ—à–∏–±–æ–∫
3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∞–Ω–∞–ª–∏–∑ –∞—Ä—Å–µ–Ω–∞–ª–∞ –≤ –±–æ—Ç–µ

üìä –ù–û–í–ê–Ø –°–¢–†–£–ö–¢–£–†–ê –¢–ê–ë–õ–ò–¶–´ (13 —Å—Ç–æ–ª–±—Ü–æ–≤):
1. ID - —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞
2. –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω—É–º–µ—Ä–∞—Ü–∏—è –±–µ–∑ –¥—É–±–ª–µ–π
3. –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ - –∫–∞—Ä—Ç–∏–Ω–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ (–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ)
4. –ù–∞–∑–≤–∞–Ω–∏–µ - –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞
5. –¢–∏–ø - —Ç–∏–ø –ø—Ä–µ–¥–º–µ—Ç–∞
6. –ö–∞—á–µ—Å—Ç–≤–æ - —Å —Ñ–æ–Ω–æ–≤—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏ (—ç–ø–∏—á–µ—Å–∫–æ–µ=—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π, —Ä–µ–¥–∫–æ–µ=—Å–∏–Ω–∏–π, –æ–±—ã—á–Ω–æ–µ=—Å–µ—Ä—ã–π)
7. –£—Ä–æ–≤–µ–Ω—å - —Ä–∏–º—Å–∫–∏–µ —Ü–∏—Ñ—Ä—ã (–µ—Å–ª–∏ –º–∞–≥–∏—á–µ—Å–∫–∏–µ >101%, —Ç–æ –æ—Ä–∞–Ω–∂–µ–≤—ã–π —Ñ–æ–Ω –∫–∞—á–µ—Å—Ç–≤–∞)
8. –ì–° - –∫–∞–∫ –±—ã–ª–æ
9. –û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ - –ø–æ –ø—É–Ω–∫—Ç–∞–º (–∫–∞–∫ –º–∞–≥–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞)
10. –ú–∞–≥–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ - –∫–∞–∫ –±—ã–ª–æ
11. –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è - –ø–æ –ø—É–Ω–∫—Ç–∞–º (–∫–∞–∫ –º–∞–≥–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞)  
12. –°—Ç–∞—Ç—É—Å - –ù–æ–≤–∞—è/–°—Ç–∞—Ä–∞—è (–ª–æ–≥–∏–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∞)
13. –û—Ç–¥–∞–ª - —Ä—É—á–Ω–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ

üÜï –û–°–û–ë–ï–ù–ù–û–°–¢–ò –í–ï–†–°–ò–ò v.4.0.0:
‚Ä¢ –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è, –Ω–µ –¥—É–±–ª–∏—Ä—É–µ—Ç—Å—è
‚Ä¢ –°—Ç–∞—Ç—É—Å "–ù–æ–≤–∞—è" —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏, –ø–æ—Ç–æ–º "–°—Ç–∞—Ä–∞—è"
‚Ä¢ –û—Ä–∞–Ω–∂–µ–≤—ã–π —Ñ–æ–Ω –∫–∞—á–µ—Å—Ç–≤–∞ –µ—Å–ª–∏ –º–∞–≥–∏—á–µ—Å–∫–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ > 101%
‚Ä¢ –®–∏—Ä–∏–Ω–∞ —Å—Ç–æ–ª–±—Ü–æ–≤ –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å—Ç–æ–ª–±—Ü–∞ "–û—Ç–¥–∞–ª"

‚ö†Ô∏è –í–ê–ñ–ù–û:
‚Ä¢ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –í–ï–°–¨ –∫–æ–¥ –∏–∑ —Ñ–∞–π–ª–∞ google-apps-script.js
‚Ä¢ URL –¥–æ–ª–∂–µ–Ω –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è –Ω–∞ /exec (–ù–ï /dev)
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å "Anyone" (–í—Å–µ)

‚úÖ –ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–∞–±–ª–∏—Ü–∞ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π!
        `);
    },

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
     * @param {Array} itemsData - –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–µ–¥–º–µ—Ç–∞—Ö
     */
    generateItemsTableHTML(itemsData) {
        const currentDate = new Date().toLocaleString('ru-RU');
        
        let html = `
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <title>–ê–Ω–∞–ª–∏–∑ –ê—Ä—Å–µ–Ω–∞–ª–∞ –ì–∏–ª—å–¥–∏–∏ - ${currentDate}</title>
            <style>
                body { font-family: 'Segoe UI', Arial, sans-serif; margin: 20px; background: #f5f5f5; }
                .container { max-width: 1400px; margin: 0 auto; background: white; padding: 30px; border-radius: 10px; box-shadow: 0 4px 20px rgba(0,0,0,0.1); }
                h1 { color: #2c3e50; text-align: center; margin-bottom: 10px; font-size: 28px; }
                .subtitle { text-align: center; color: #7f8c8d; margin-bottom: 30px; font-size: 16px; }
                table { width: 100%; border-collapse: collapse; margin: 20px 0; font-size: 12px; }
                th { background: linear-gradient(135deg, #3498db, #2980b9); color: white; padding: 12px 8px; text-align: left; font-weight: bold; position: sticky; top: 0; }
                td { padding: 10px 8px; border-bottom: 1px solid #ecf0f1; vertical-align: top; }
                tr:nth-child(even) { background-color: #f8f9fa; }
                tr:hover { background-color: #e3f2fd; }
                .item-name { font-weight: bold; color: #2c3e50; max-width: 150px; }
                .item-type { color: #8e44ad; font-weight: 600; }
                .quality-epic { color: #9b59b6; font-weight: bold; }
                .quality-rare { color: #3498db; font-weight: bold; }
                .quality-uncommon { color: #27ae60; font-weight: bold; }
                .quality-common { color: #95a5a6; }
                .gear-score { font-size: 14px; font-weight: bold; color: #e74c3c; text-align: center; }
                .stats-list { margin: 0; padding: 0; list-style: none; }
                .stats-list li { margin: 2px 0; font-size: 11px; }
                .magic-props { margin: 0; padding: 0; list-style: none; }
                .magic-props li { margin: 2px 0; font-size: 11px; color: #8e44ad; }
                .requirements { margin: 0; padding: 0; list-style: none; font-size: 10px; color: #7f8c8d; }
                .summary { background: #ecf0f1; padding: 20px; border-radius: 8px; margin-top: 20px; text-align: center; }
                .summary h3 { color: #2c3e50; margin: 0 0 10px 0; }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>üèõÔ∏è –ê–Ω–∞–ª–∏–∑ –ê—Ä—Å–µ–Ω–∞–ª–∞ –ì–∏–ª—å–¥–∏–∏</h1>
                <div class="subtitle">–î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞: ${currentDate} | –í—Å–µ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ${itemsData.length}</div>
                
                <table>
                    <thead>
                        <tr>
                            <th>‚Ññ</th>
                            <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
                            <th>–¢–∏–ø</th>
                            <th>–ö–∞—á–µ—Å—Ç–≤–æ</th>
                            <th>–£—Ä–æ–≤–µ–Ω—å</th>
                            <th>–ì–°</th>
                            <th>–û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</th>
                            <th>–ú–∞–≥–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞</th>
                            <th>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è</th>
                        </tr>
                    </thead>
                    <tbody>
        `;
        
        itemsData.forEach((item, index) => {
            const qualityClass = this.getQualityClass(item.quality);
            
            html += `
                <tr>
                    <td>${index + 1}</td>
                    <td class="item-name">${item.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</td>
                    <td class="item-type">${item.type || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</td>
                    <td class="${qualityClass}">${item.quality || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</td>
                    <td>${item.tier || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</td>
                    <td class="gear-score">${item.gearScore || 0}</td>
                    <td>
                        <ul class="stats-list">
                            ${item.stats.map(stat => `<li>‚Ä¢ ${stat.name}: ${stat.value}</li>`).join('')}
                        </ul>
                    </td>
                    <td>
                        <ul class="magic-props">
                            ${item.magicProps.map(prop => `<li>‚Ä¢ ${prop.name}: ${prop.value} ${prop.percent}</li>`).join('')}
                        </ul>
                    </td>
                    <td>
                        <ul class="requirements">
                            ${item.requirements.map(req => `<li>${req.key} ${req.value}</li>`).join('')}
                        </ul>
                    </td>
                </tr>
            `;
        });
        
        html += `
                    </tbody>
                </table>
                
                <div class="summary">
                    <h3>üìä –°–≤–æ–¥–∫–∞ –∞–Ω–∞–ª–∏–∑–∞</h3>
                    <p>–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: <strong>${itemsData.length}</strong></p>
                    <p>–°—Ä–µ–¥–Ω–∏–π –ì–°: <strong>${this.calculateAverageGS(itemsData)}</strong></p>
                    <p>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ì–°: <strong>${this.getMaxGS(itemsData)}</strong></p>
                    <p>–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –±–æ—Ç–æ–º Ligmar v.${window.BotConfig.SCRIPT_COMMIT}</p>
                </div>
            </div>
        </body>
        </html>
        `;
        
        return html;
    },

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ CSS –∫–ª–∞—Å—Å–∞ –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–∞ –ø—Ä–µ–¥–º–µ—Ç–∞
     */
    getQualityClass(quality) {
        if (quality.includes('–≠–ø–∏—á–µ—Å–∫')) return 'quality-epic';
        if (quality.includes('–†–µ–¥–∫')) return 'quality-rare';
        if (quality.includes('–ù–µ–æ–±—ã—á–Ω')) return 'quality-uncommon';
        return 'quality-common';
    },

    /**
     * –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –ì–°
     */
    calculateAverageGS(itemsData) {
        const totalGS = itemsData.reduce((sum, item) => sum + (item.gearScore || 0), 0);
        return Math.round(totalGS / itemsData.length);
    },

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –ì–°
     */
    getMaxGS(itemsData) {
        return Math.max(...itemsData.map(item => item.gearScore || 0));
    },

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞
     */
    generatePlainTextTable(itemsData) {
        const currentDate = new Date().toLocaleString('ru-RU');
        let text = `üèõÔ∏è –ê–ù–ê–õ–ò–ó –ê–†–°–ï–ù–ê–õ–ê –ì–ò–õ–¨–î–ò–ò\n`;
        text += `–î–∞—Ç–∞: ${currentDate}\n`;
        text += `–í—Å–µ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ${itemsData.length}\n\n`;
        
        text += `‚Ññ\t–ù–∞–∑–≤–∞–Ω–∏–µ\t–¢–∏–ø\t–ö–∞—á–µ—Å—Ç–≤–æ\t–£—Ä–æ–≤–µ–Ω—å\t–ì–°\t–û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏\t–ú–∞–≥–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞\n`;
        text += '='.repeat(150) + '\n';
        
        itemsData.forEach((item, index) => {
            const stats = item.stats.map(s => `${s.name}: ${s.value}`).join(', ');
            const magicProps = item.magicProps.map(p => `${p.name}: ${p.value} ${p.percent}`).join(', ');
            
            text += `${index + 1}\t${item.name}\t${item.type}\t${item.quality}\t${item.tier}\t${item.gearScore}\t${stats}\t${magicProps}\n`;
        });
        
        text += '\nüìä –°–í–û–î–ö–ê:\n';
        text += `–°—Ä–µ–¥–Ω–∏–π –ì–°: ${this.calculateAverageGS(itemsData)}\n`;
        text += `–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ì–°: ${this.getMaxGS(itemsData)}\n`;
        text += `–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –±–æ—Ç–æ–º Ligmar v.${window.BotConfig.SCRIPT_COMMIT}`;
        
        return text;
    },

    /**
     * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
     */
    testFunction() {
        console.log('‚úÖ Test completed successfully!');
    },

    /**
     * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∫–ª–∏–∫–∞ –ø–æ –ø–æ–ª–∏–≥–æ–Ω—É
     * @param {string} selector - CSS —Å–µ–ª–µ–∫—Ç–æ—Ä –ø–æ–ª–∏–≥–æ–Ω–∞ –∏–ª–∏ —Å–∞–º —ç–ª–µ–º–µ–Ω—Ç
     */
    clickHexagonPolygon(selector) {
        let polygon = null;
        
        // –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω —Å—Ç—Ä–æ–∫–æ–≤—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä, –∏—â–µ–º —ç–ª–µ–º–µ–Ω—Ç
        if (typeof selector === 'string') {
            polygon = document.querySelector(selector);
        } else {
            // –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω —Å–∞–º —ç–ª–µ–º–µ–Ω—Ç
            polygon = selector;
        }
        
        if (polygon) {
            console.log('‚úÖ –ü–æ–ª–∏–≥–æ–Ω –Ω–∞–π–¥–µ–Ω, –≤—ã–ø–æ–ª–Ω—è—é –∫–ª–∏–∫...');
            
            // SVG —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –∏–º–µ—é—Ç –º–µ—Ç–æ–¥–∞ .click(), –∏—Å–ø–æ–ª—å–∑—É–µ–º dispatchEvent
            try {
                const rect = polygon.getBoundingClientRect();
                const clickEvent = new MouseEvent('click', {
                    bubbles: true,
                    cancelable: true,
                    view: window,
                    clientX: rect.left + rect.width / 2,
                    clientY: rect.top + rect.height / 2
                });
                
                polygon.dispatchEvent(clickEvent);
                console.log('üñ±Ô∏è –ö–ª–∏–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω —á–µ—Ä–µ–∑ MouseEvent');
                return true;
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –ø–æ–ª–∏–≥–æ–Ω—É:', error);
                return false;
            }
        } else {
            console.log('‚ùå –ü–æ–ª–∏–≥–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return false;
        }
    }
};

